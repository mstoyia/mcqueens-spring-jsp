spring.application.name=macqueens

#configured our view resolver
#this allows spring to know where the jsp's 
spring.mvc.view.prefix= /WEB-INF/jsp/
spring.mvc.view.suffix=.jsp
server.error.whitelabel.enabled=false
server.error.include-stacktrace=always

spring.datasource.url=jdbc:mysql://localhost:3306/macqueensdb

spring.datasource.username=root
spring.datasource.password=1@i75s62
spring.jpa.show-sql = true

spring.jpa.hibernate.ddl-auto=update

spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect


stripe.apiKey=sk_test_51Hnq2vE6FrPxNavLsSOCyhFwGgy39a5ZEXFiqEZCfM5D87vp4zkeVkMu3S6p6wX1o9tnvkXkdvoirWr2Gc10KRl900bfoAMs2W

#API(Application Programming Interface): allows different software applications to communicate with each other

#API Documentation: rules and protocols that allow communication, e.g. methods, parameters, data format

#Publishable(Public) Key: is meant for public use. used for operations that don't require security 

#Secret(Private) Key: is meant for server side, and it's reserved for more secure tasks, e.g. authentication

#API keys control access to API's to track how they are being used. API KEy authenticates a user/developer and it allows you call an API